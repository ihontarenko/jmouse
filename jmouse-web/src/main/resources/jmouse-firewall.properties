# Firewall
# Rate Limit
jmouse.web.servlet.firewall.token-bucket.refillRate=2
jmouse.web.servlet.firewall.token-bucket.burst=4

# Trusted Proxies
jmouse.web.servlet.firewall.trustedProxy[0]=10.0.0.0/8
jmouse.web.servlet.firewall.trustedProxy[1]=172.16.0.0/12

# Untrusted Browsers
jmouse.web.servlet.firewall.untrustedBrowser[0]=sqlmap
jmouse.web.servlet.firewall.untrustedBrowser[1]=nikto
jmouse.web.servlet.firewall.untrustedBrowser[2]=acunetix
jmouse.web.servlet.firewall.untrustedBrowser[3]=curl
jmouse.web.servlet.firewall.untrustedBrowser[4]=wget

# Blocked Countries
jmouse.web.servlet.firewall.blockedCountries[0]=RU
jmouse.web.servlet.firewall.blockedCountries[1]=\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C

# Inspection Policies
# -------------------
# SQL Injections (sqli)
# -------------------

# Existing (kept for compatibility)
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][information_schema]=(?i)information_schema
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][union_select]=(?i)union\\s+select
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][sleep]=(?i)sleep\\s*\\(
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][or_true]=(?i)or\\s+1=1
#jmouse.web.servlet.firewall.inspectionPolicy[injection][contains][comment.inline]=--
#jmouse.web.servlet.firewall.inspectionPolicy[injection][contains][danger.quote]='
#jmouse.web.servlet.firewall.inspectionPolicy[injection][contains][comment.block]=/*

# Obfuscated UNION SELECT (handles /*...*/ or spaces between tokens)
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][union_select_obf]=(?i)union(?:/\\*.*?\\*/|\\s)+all?(?:/\\*.*?\\*/|\\s)+select

# Timing/Delay functions (various RDBMS)
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][pg_sleep]=(?i)pg_sleep\\s*\\(
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][benchmark]=(?i)benchmark\\s*\\(
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][wait_for_delay]=(?i)waitfor\\s+delay\\s+'\\d{2}:\\d{2}:\\d{2}'

# Stacked queries / execution / declarations
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][stacked_queries]=(?i);\\s*(select|insert|update|delete|drop|alter|create|exec|truncate|merge)\\b
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][exec]=(?i)\\bexec(?:ute)?\\b
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][declare]=(?i)\\bdeclare\\b
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][set_var]=(?i)\\bset\\s+@\\w+

# File/system access indicators
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][load_file]=(?i)load_file\\s*\\(
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][into_outfile]=(?i)into\\s+(?:dump)?file\\b
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][xp_cmdshell]=(?i)xp_cmdshell

# System catalogs across DBs
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][mysql_user_tbl]=(?i)mysql\\.user\\b
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][pg_catalog]=(?i)pg_(catalog|tables|user)\\b
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][mssql_sys_objects]=(?i)sys(objects|users|databases)\\b

# Metadata discovery functions
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][version_fn]=(?i)\\bversion\\s*\\(\\)|@@version\\b
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][database_fn]=(?i)\\bdatabase\\s*\\(\\)|@@datadir\\b
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][user_fn]=(?i)\\buser\\s*\\(\\)

# Obfuscation and string builders
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][mysql_versioned_comment]=/\\*!\\d{3,}.*?\\*/
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][hex_literal]=(?i)0x[0-9a-f]{6,}
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][char_nchar]=(?i)\\b(n?char)\\s*\\(\\s*\\d+(\\s*,\\s*\\d+)*\\s*\\)
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][cast_convert]=(?i)\\b(cast|convert)\\s*\\(
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][concat_functions]=(?i)\\b(concat_ws|group_concat|concat)\\s*\\(

# Tautologies
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][quoted_tautology]=(?i)'\\s*or\\s*'1'='1(?:\\s*(--|#|/\\*))?
jmouse.web.servlet.firewall.inspectionPolicy[injection][expression][paren_tautology]=(?i)\\)\\s*or\\s*(?:'1'='1|1=1)(?:\\s*(--|#|/\\*))?

# Optional: MySQL hash-style inline comment token
jmouse.web.servlet.firewall.inspectionPolicy[injection][contains][comment.hash]=#

# -----------
# XSS
# -----------

# Existing (with proto_js fixed to 'javascript:')
jmouse.web.servlet.firewall.inspectionPolicy[xss][contains][img_svg_on]=onload=
jmouse.web.servlet.firewall.inspectionPolicy[xss][contains][proto_js]=javascript:
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][script_tag]=(?i)<\\s*script\\b
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][js_proto]=(?i)javascript:
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][on_error]=(?i)onerror\\s*=
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][on_load]=(?i)onload\\s*=
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][data_html]=(?i)data:text/html

# Generic event handler attribute
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][on_any]=(?i)\\bon[a-z]{2,}\\s*=

# Tag-based vectors
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][svg_tag]=(?i)<\\s*svg\\b
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][iframe_tag]=(?i)<\\s*iframe\\b
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][object_embed_tag]=(?i)<\\s*(object|embed)\\b

# Protocol-based injections in attributes
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][href_js]=(?i)href\\s*=\\s*['\\"]\\s*javascript:
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][img_src_js]=(?i)<\\s*img\\b[^>]*\\bsrc\\s*=\\s*['\\"]?\\s*javascript:
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][xlink_js]=(?i)xlink:href\\s*=\\s*['\\"][^'\\"]*javascript:
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][data_proto_js]=(?i)data:\\s*(text|application)/(html|javascript)

# srcdoc, inline styles, CSS url()
jmouse.web.servlet.firewall.inspectionPolicy[xss][contains][srcdoc]=srcdoc=
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][style_expression]=(?i)style\\s*=\\s*['\\"][^'\\"]*expression\\s*\\(
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][css_url_js]=(?i)url\\s*\\(\\s*javascript\\s*:

# Encoded <script
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][html_entity_script]=(?i)(?:&#x3c;|&lt;)\\s*script

# JS needles (consider lowering severity; common in tech content)
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][eval_fn]=(?i)\\b(eval|Function)\\s*\\(
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][document_cookie]=(?i)document\\s*\\.\\s*cookie
jmouse.web.servlet.firewall.inspectionPolicy[xss][expression][window_location]=(?i)window\\s*\\.\\s*location

